#!/usr/bin/python
# -*- coding: UTF-8 -*-
import xmlrpclib, urllib2, time, re, sys

def usage():
    print("\nUsage:   updatedns <api key> <domain name> <record name> <record type> <zone id>")

def main():
    if (len(sys.argv) < 5):
        print("Not enough parameters provided")
        usage()
        sys.exit()

    # Production API
    api = xmlrpclib.ServerProxy('https://rpc.gandi.net/xmlrpc/')

    # URL of a page providing the current IP
    url_page = 'http://ifconfig.me/ip'

    # Production API key
    apikey = str(sys.argv[1])
    print("API key: " + apikey)

    # Domain
    mydomain = str(sys.argv[2])
    print("Domaine: " + mydomain)

    # Record to modify
    myrecord = {'name': str(sys.argv[3]), 'type': str(sys.argv[4])}
    print("Record name: " + myrecord['name'] + " type: " + myrecord['type'])

    # TTL
    myttl = 300

    # ID of the zone to modify
    zone_id = int(sys.argv[5])
    print("Zone ID: " + str(zone_id))

    ####################################

    # Old IP adress
    oldip = api.domain.zone.record.list(apikey, zone_id, 0, myrecord)[0].get('value')

    try:
        # Current IP adress
        f = urllib2.urlopen(url_page, None, 10)
        data = f.read()
        f.close()
        pattern = re.compile('\d+\.\d+\.\d+\.\d+')
        result = pattern.search(data, 0)
        if result == None:
            print("Pas d'ip dans cette page.")
            sys.exit() 
        else:
            currentip = result.group(0)

        # Updating if necessary
        if oldip != currentip:
            # Creating a new zone
            version = api.domain.zone.version.new(apikey, zone_id)
            # Delete and recreated the record
            api.domain.zone.record.delete(apikey, zone_id, version, myrecord)
            myrecord['value'] = currentip
            myrecord['ttl'] = myttl
            api.domain.zone.record.add(apikey, zone_id, version, myrecord)
            # Publish the modifications
            api.domain.zone.version.set(apikey, zone_id, version)
            api.domain.zone.set(apikey, mydomain, zone_id)
            print("Record changed to ip: %s" % currentip)
    except urllib2.HTTPError, xmlrpclib.ProtocolError:
        print("Site unavailable.")
    finally:
        sys.exit()

if __name__ == "__main__":
    main()
